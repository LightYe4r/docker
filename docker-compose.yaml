version: "3.8"

networks:
  front:
    driver: bridge
    ipam:
      config:
        - subnet: "172.30.1.0/24"

  back:
    driver: bridge
    ipam:
      config:
        - subnet: "172.30.2.0/24"

services:
  front-proxy:
    image: nginx:1.25.4-alpine
    volumes:
      - ./build/front-proxy.conf:/etc/nginx/nginx.conf
    command: ["nginx", "-g", "daemon off;"]
    networks:
      - front
    ports:
      - "80:80"
    restart: always
    depends_on:
      - frontend

  frontend:
    # build:
    #   context: .
    #   dockerfile: front/Dockerfile-front
    image: dbgurum/guestbook:frontend_1.0
    networks:
      - front
    restart: always
    ports:
      - "3001-3003:8000"
    deploy:
      replicas: 3
      mode: replicated
    depends_on:
      - back-proxy
    environment:
      - GUESTBOOK_API_ADDR=back-proxy:8080
      - PORT=8000

  back-proxy:
    build:
      context: .
      dockerfile: build/Dockerfile-b-proxy
    networks:
      - back
      - front
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      - backend
    volumes:
      - ./build/haproxy.cfg:/etc/haproxy/haproxy.cfg
      - ./build/keepalived.conf:/etc/keepalived/keepalived.conf
    command: ["sh", "-c", "haproxy -f /etc/haproxy/haproxy.cfg -d && keepalived -f /etc/keepalived/keepalived.conf -d"]
  backend:
    # build:
    #   context: .
    #   dockerfile: back/Dockerfile-back
    image: dbgurum/guestbook:backend_1.0
    networks:
      - back
    restart: always
    ports:
      - "5001-5003:8000"
    deploy:
      replicas: 3
      mode: replicated
    environment:
      - PORT=8000
      - GUESTBOOK_DB_ADDR=db:27017
    depends_on:
      - db

  db:
    # build:
    #   context: .
    #   dockerfile: db/Dockerfile-db
    image: mongo:4
    networks:
      - back
    restart: always
    ports:
      - "17017:27017"
