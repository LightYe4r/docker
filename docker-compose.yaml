networks:
  front_net:
    driver: bridge
    ipam:
      config:
        - subnet: "172.40.1.0/24"

  back_net:
    driver: bridge
    ipam:
      config:
        - subnet: "172.40.2.0/24"

  monitoring:
    driver: bridge
    ipam:
      config:
        - subnet: "172.40.3.0/24"

services:
  front-proxy:
    image: kijung2/docker-compose-nginx:latest
    container_name: docker-nginx
    networks:
      - front_net
    restart: always
    ports:
      - "80:80"
    depends_on:
      - frontend
  
  frontend:
    image: kijung2/docker-nextjs:latest
    networks:
      - front_net
    restart: always
    deploy:
      replicas: 3
      mode: replicated
    depends_on:
      - back-proxy

  back-proxy:
    image: kijung2/docker-compose-haproxy:latest
    container_name: docker-haproxy
    networks:
      - front_net
      - back_net
    restart: always
    depends_on:
      - backend
    
  backend:
    image: seonxx/docker-flask:latest
    networks:
      - back_net
    restart: always
    deploy:
      replicas: 3
      mode: replicated
    depends_on:
      - database
    environment:
      - MYSQL_HOST=database
    
  database:
    image: kijung2/docker-mysql:latest
    container_name: docker-db
    networks:
      - back_net
    restart: always

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    deploy:
      mode: global
    networks:
      - monitoring

  node-exporter:
    image: prom/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 9100:9100
    deploy:
      mode: global
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    networks:
      - monitoring
    volumes:
      - ./build/prometheus.yml:/etc/prometheus/prometheus.yml
    environment:
      - config.file=/etc/prometheus/prometheus.yml
      - storage.local.path=/prometheus
      - web.console.libraries=/etc/prometheus/console_libraries
      - web.console.templates=/etc/prometheus/consoles
    depends_on:
      - cadvisor
      - node-exporter

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    networks:
      - monitoring
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_SECURITY_ADMIN_PASSWORD=pass123#
    depends_on:
      - prometheus